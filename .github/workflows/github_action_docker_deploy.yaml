name: CI/CD with Docker Compose

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Build and Push Backend
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build & Push Backend Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest

      - name: Build & Push Frontend Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest ./client
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest

      - name: Upload .env file
        run: |
          scp -o StrictHostKeyChecking=no -i githubaction-key.pem .env ${{ secrets.USER }}@${{ secrets.IP }}:/home/ubuntu/app/.env
          scp -o StrictHostKeyChecking=no -i githubaction-key.pem ./client/.env ${{ secrets.USER }}@${{ secrets.IP }}:/home/ubuntu/app/client/.env

      # SSH to EC2 and deploy with docker-compose
      - name: Write SSH Key
        run: |
          echo "${{ secrets.PRIVATE_KEY }}" > githubaction-key.pem
          chmod 600 githubaction-key.pem

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i githubaction-key.pem ${{ secrets.USER }}@${{ secrets.IP }} << 'EOF'
            cd /home/ubuntu/app # Replace with the correct directory
            if [ ! -d .git ]; then
              echo "Initializing git repository..."
              git init
              git remote add origin https://github.com/Shafi327/Food_website_Ci-CD_Action.git
            fi
            git pull origin main
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker-compose pull
            docker-compose up -d
          EOF
